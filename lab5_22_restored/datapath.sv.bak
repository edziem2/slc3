module datapath (
	input logic LD_BEN,
					LD_CC,
					LD_REG,
					LD_PC,
					LD_LED, // for PAUSE instruction
					GatePC,
					GateMDR,
					GateALU,
					GateMARMUX,
					DRMUX,
					SR1MUX,
					SR2MUX,
					ADDR1MUX,
	input logic [1:0]  PCMUX,ADDR2MUX, ALUK,
	input logic [15:0] PC,
							 MDR,
	output logic [15:0] PC_In,
							  Bus
);

logic [15:0] pc_plus_one;
logic [1:0] BUSMUX;

mux4_1_16 PC_MUX (.S(PCMUX), .A_In(pc_plus_one), .B_In(16'b0), .C_In(16'b0), .D_In(16'b0), .Q_Out(PC_In));
mux4_1_16 BUS_MUX (.S(BUSMUX), .A_In(PC), .B_In(MDR), .C_In(16'b0), .D_In(16'b0), .Q_Out(Bus));

always_comb
begin
	pc_plus_one = PC + 16'b1;
	BUSMUX = 2'b00;
	if (GatePC)
		BUSMUX = 2'b00;
	else if (GateMDR)
		BUSMUX = 2'b01;
	else if (GateMARMUX)
		BUSMUX = 2'b10;
	else if (GateALU)
		BUSMUX = 2'b11;	
	
end


endmodule 